[{"C:\\workspace\\Foundry-Canvas-React\\src\\index.tsx":"1","C:\\workspace\\Foundry-Canvas-React\\src\\PaintTest6.tsx":"2","C:\\workspace\\Foundry-Canvas-React\\src\\models\\effect.ts":"3","C:\\workspace\\Foundry-Canvas-React\\src\\models\\wave.ts":"4","C:\\workspace\\Foundry-Canvas-React\\src\\models\\timeline.ts":"5","C:\\workspace\\Foundry-Canvas-React\\src\\models\\lights.ts":"6","C:\\workspace\\Foundry-Canvas-React\\src\\models\\walker.ts":"7","C:\\workspace\\Foundry-Canvas-React\\src\\models\\globalClock.ts":"8","C:\\workspace\\Foundry-Canvas-React\\src\\Canvas.tsx":"9","C:\\workspace\\Foundry-Canvas-React\\src\\ClockFace.tsx":"10","C:\\workspace\\Foundry-Canvas-React\\src\\models\\rxPubSub.ts":"11","C:\\workspace\\Foundry-Canvas-React\\src\\CanvasHook.ts":"12","C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foShape2D.model.ts":"13","C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foPage.model.ts":"14","C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foObject.model.ts":"15","C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foCollection.model.ts":"16","C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foTools.ts":"17","C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foLifecycle.ts":"18","C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foMatrix2D.ts":"19","C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foGlyph2D.model.ts":"20","C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foGeometry2D.ts":"21","C:\\workspace\\Foundry-Canvas-React\\src\\models\\program.ts":"22","C:\\workspace\\Foundry-Canvas-React\\src\\PaintTest7.tsx":"23","C:\\workspace\\Foundry-Canvas-React\\src\\core\\foRenderer.tsx":"24"},{"size":242,"mtime":1608837449414,"results":"25","hashOfConfig":"26"},{"size":5508,"mtime":1608831971640,"results":"27","hashOfConfig":"26"},{"size":3349,"mtime":1608844577908,"results":"28","hashOfConfig":"26"},{"size":3166,"mtime":1608831971767,"results":"29","hashOfConfig":"26"},{"size":8823,"mtime":1608842056190,"results":"30","hashOfConfig":"26"},{"size":6084,"mtime":1608842791139,"results":"31","hashOfConfig":"26"},{"size":825,"mtime":1608831971756,"results":"32","hashOfConfig":"26"},{"size":2964,"mtime":1608843189306,"results":"33","hashOfConfig":"26"},{"size":483,"mtime":1608831971618,"results":"34","hashOfConfig":"26"},{"size":2084,"mtime":1608831971628,"results":"35","hashOfConfig":"26"},{"size":406,"mtime":1608831971733,"results":"36","hashOfConfig":"26"},{"size":699,"mtime":1608595045223,"results":"37","hashOfConfig":"26"},{"size":5879,"mtime":1608595045282,"results":"38","hashOfConfig":"26"},{"size":5139,"mtime":1608595045277,"results":"39","hashOfConfig":"26"},{"size":10904,"mtime":1608595045275,"results":"40","hashOfConfig":"26"},{"size":3155,"mtime":1608831971652,"results":"41","hashOfConfig":"26"},{"size":14140,"mtime":1608831971693,"results":"42","hashOfConfig":"26"},{"size":6146,"mtime":1608831971683,"results":"43","hashOfConfig":"26"},{"size":9184,"mtime":1608595045274,"results":"44","hashOfConfig":"26"},{"size":17877,"mtime":1608831971669,"results":"45","hashOfConfig":"26"},{"size":7560,"mtime":1608595045268,"results":"46","hashOfConfig":"26"},{"size":1113,"mtime":1608844038781,"results":"47","hashOfConfig":"26"},{"size":5167,"mtime":1608844321013,"results":"48","hashOfConfig":"26"},{"size":1640,"mtime":1608595045239,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"z0frj2",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\workspace\\Foundry-Canvas-React\\src\\index.tsx",[],["103","104"],"C:\\workspace\\Foundry-Canvas-React\\src\\PaintTest6.tsx",[],["105","106"],"C:\\workspace\\Foundry-Canvas-React\\src\\models\\effect.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\models\\wave.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\models\\timeline.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\models\\lights.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\models\\walker.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\models\\globalClock.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\Canvas.tsx",[],"C:\\workspace\\Foundry-Canvas-React\\src\\ClockFace.tsx",[],"C:\\workspace\\Foundry-Canvas-React\\src\\models\\rxPubSub.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\CanvasHook.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foShape2D.model.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foPage.model.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foObject.model.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foCollection.model.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foTools.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foLifecycle.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foMatrix2D.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foGlyph2D.model.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\foundry\\models\\foGeometry2D.ts",["107","108"],"\r\nimport { iPoint2D, iRect, iBox, iMargin, iFrame } from './foInterface';\r\nimport { Vector2, Matrix3 } from 'three';\r\nexport { Vector2, Matrix3 } from 'three';\r\n\r\nexport class cPoint2D extends Vector2 implements iPoint2D {\r\n\r\n    public myName: string;\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x: number = 0, y: number = 0, name?: string) {\r\n        super(x, y);\r\n        this.myName = name;\r\n    }\r\n\r\n    asVector(): Vector2 {\r\n        return new Vector2(this.x, this.y);\r\n    }\r\n\r\n    setValues(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    clonePoint(): cPoint2D {\r\n        return new cPoint2D(this.x, this.y, this.myName);\r\n    }\r\n\r\n    isEqualTo(p: cPoint2D): boolean {\r\n        return this.x === p.x && this.y === p.y;\r\n    }\r\n\r\n    isNear(p: cPoint2D, radius: number): boolean {\r\n        const dx = Math.abs(p.x - this.x);\r\n        if (dx > radius) { return false; }\r\n\r\n        const dy = Math.abs(p.y - this.y);\r\n        if (dy > radius) { return false; }\r\n        return true;\r\n\r\n    }\r\n\r\n    addPoint(x: number = 0, y: number = 0): cPoint2D {\r\n        this.x += x;\r\n        this.y += y;\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n    subtractPoint(x: number = 0, y: number = 0): cPoint2D {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        return this;\r\n    }\r\n\r\n    midPoint(pt: cPoint2D): cPoint2D {\r\n        const x = (this.x + pt.x) / 2;\r\n        const y = (this.y + pt.y) / 2;\r\n        return new cPoint2D(x, y, 'midpoint');\r\n    }\r\n\r\n    mag(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    atan(): number {\r\n        return Math.atan2(this.y,  this.x);\r\n    }\r\n\r\n    normal(): cPoint2D {\r\n        let mag = this.mag();\r\n        mag = mag ? mag : 1.0; //if zero set to 1 you get the same result\r\n        return new cPoint2D(this.x / mag, this.y / mag, 'normal');\r\n    }\r\n\r\n    sum(p: cPoint2D): cPoint2D {\r\n        this.x += p.x;\r\n        this.y += p.y;\r\n        return this;\r\n    }\r\n\r\n    sumTo(p: cPoint2D): cPoint2D {\r\n        p.x += this.x;\r\n        p.y += this.y;\r\n        return p;\r\n    }\r\n\r\n    setTo(p: cPoint2D): cPoint2D {\r\n        p.x = this.x;\r\n        p.y = this.y;\r\n        return p;\r\n    }\r\n\r\n    subtract(p: cPoint2D): cPoint2D {\r\n        this.x -= p.x;\r\n        this.y -= p.y;\r\n        return this;\r\n    }\r\n\r\n    deltaBetween(pt: cPoint2D): cPoint2D {\r\n        const x = this.x - pt.x;\r\n        const y = this.y - pt.y;\r\n        return new cPoint2D(x, y, 'delta');\r\n    }\r\n\r\n    scale(s: number): cPoint2D {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class cRect implements iRect {\r\n    public x: number;\r\n    public y: number;\r\n    public width: number;\r\n    public height: number;\r\n    public myName: string;\r\n\r\n    constructor(x: number, y: number, width: number, height: number, name?: string) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.myName = name;\r\n    }\r\n\r\n    moveBy(x: number = 0, y: number = 0): iRect {\r\n        this.x += x;\r\n        this.y += y;\r\n        return this;\r\n    }\r\n\r\n    moveTo(x: number = 0, y: number = 0): iRect {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    sizeBy(width: number, height: number): iRect {\r\n        this.width += width;\r\n        this.height += height;\r\n        return this;\r\n    }\r\n\r\n    sizeTo(width: number, height: number): iRect {\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    set(x: number, y: number, width: number, height: number): iRect {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    contains(x: number, y: number) {\r\n        return this.x <= x && x <= this.x + this.width && this.y <= y && y <= this.y + this.height;\r\n    }\r\n\r\n    localContains(x: number, y: number): boolean {\r\n        return 0 <= x && x <= this.width && 0 <= y && y <= this.height;\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, fill?: boolean) {\r\n        if (fill) {\r\n            ctx.fillRect(this.x, this.y, this.width, this.height);\r\n        } else {\r\n            ctx.rect(this.x, this.y, this.width, this.height);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\nexport class cFrame implements iFrame {\r\n    public x1: number;\r\n    public y1: number;\r\n    public x2: number;\r\n    public y2: number;\r\n\r\n    public point: cPoint2D = new cPoint2D();\r\n    public source: any;\r\n\r\n    constructor(source?: any) {\r\n        this.source = source;\r\n    }\r\n\r\n    set(x1: number, y1: number, x2: number, y2: number): iFrame {\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n        return this;\r\n    }\r\n\r\n    width(): number {\r\n        return this.x2 - this.x1;\r\n    }\r\n\r\n    heigth(): number {\r\n        return this.y2 - this.y1;\r\n    }\r\n\r\n    centerX(): number {\r\n        return (this.x2 + this.x1) / 2.0;\r\n    }\r\n\r\n    centerY(): number {\r\n        return (this.y2 + this.y1) / 2.0;\r\n    }\r\n\r\n    init(obj: iPoint2D): iFrame {\r\n        this.x1 = obj.x;\r\n        this.y1 = obj.y;\r\n        this.x2 = obj.x;\r\n        this.y2 = obj.y;\r\n        return this;\r\n    }\r\n\r\n    merge(obj: iFrame): iFrame {\r\n        this.x1 = Math.min(this.x1, obj.x1, obj.x2);\r\n        this.y1 = Math.min(this.y1, obj.y1, obj.y2);\r\n        this.x2 = Math.max(this.x2, obj.x2, obj.x1);\r\n        this.y2 = Math.max(this.y2, obj.y2, obj.y1);\r\n        return this;\r\n    }\r\n\r\n    minmax(obj: iPoint2D): iFrame {\r\n        this.x1 = Math.min(this.x1, obj.x);\r\n        this.y1 = Math.min(this.y1, obj.y);\r\n        this.x2 = Math.max(this.x2, obj.x);\r\n        this.y2 = Math.max(this.y2, obj.y);\r\n        return this;\r\n    }\r\n\r\n    contains(x: number, y: number) {\r\n        return this.x1 <= x && x <= this.x2 && this.y1 <= y && y <= this.y2;\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, fill?: boolean) {\r\n        const width = this.x2 - this.x1;\r\n        const height = this.y2 - this.y1;\r\n        if (fill) {\r\n            ctx.fillRect(this.x1, this.y1, width, height);\r\n        } else {\r\n            ctx.rect(this.x1, this.y1, width, height);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class cMargin implements iMargin {\r\n    public left: number = 0;\r\n    public top: number = 0;\r\n    public right: number = 0;\r\n    public bottom: number = 0;\r\n\r\n\r\n    constructor(left: number = 0, top: number = 0, right: number = 0, bottom: number = 0) {\r\n        this.left = left;\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n    }\r\n\r\n    setAll(size: number = 0) {\r\n        this.left = size;\r\n        this.top = size;\r\n        this.right = size;\r\n        this.bottom = size;\r\n        return this;\r\n    }\r\n\r\n    get width() {\r\n        return this.left + this.right;\r\n    }\r\n    get height() {\r\n        return this.top + this.bottom;\r\n    }\r\n}\r\n\r\nexport class cBox extends cRect implements iBox {\r\n\r\n    constructor(x: number, y: number, width: number, height: number, name?: string) {\r\n        super(x, y, width, height, name);\r\n    }\r\n\r\n    pinX(): number {\r\n        return 0 * this.width;\r\n    }\r\n\r\n    pinY(): number {\r\n        return 0 * this.height;\r\n    }\r\n\r\n\r\n    draw(ctx: CanvasRenderingContext2D, fill?: boolean) {\r\n        if (fill) {\r\n            ctx.fillRect(this.x, this.y, this.width, this.height);\r\n        } else {\r\n            ctx.rect(this.x, this.y, this.width, this.height);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n",["109","110"],"C:\\workspace\\Foundry-Canvas-React\\src\\models\\program.ts",[],"C:\\workspace\\Foundry-Canvas-React\\src\\PaintTest7.tsx",["111","112","113","114"],"// https://medium.com/@pdx.lucasm/canvas-with-react-js-32e133c05258\r\n// https://github.com/elchininet/ColorTranslator\r\n\r\n// https://elchininet.github.io/ColorTranslator/\r\n\r\nimport { Canvas } from 'Canvas';\r\n\r\nimport React, { FunctionComponent, ReactElement } from 'react';\r\nimport { LEDLight, LightArray, LightDesignPage } from 'models/lights';\r\nimport { TimeLinePage, TimeStep } from 'models/timeline';\r\nimport { Effect } from 'models/effect';\r\nimport { WaveDesignPage, WaveShape } from 'models/wave';\r\nimport { WalkerDesignPage } from 'models/walker';\r\nimport { SharedTimer } from 'models/globalClock';\r\nimport { ClockFace } from 'ClockFace';\r\nimport { ToJSON } from 'core/foRenderer';\r\n\r\n// https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API\r\n\r\nexport const PaintTest7: FunctionComponent<any> = (): ReactElement => {\r\n    const sourceLED = new LEDLight();\r\n    const sourceStep = new TimeStep();\r\n\r\n    SharedTimer.setSpec({\r\n        timeScale: 10,\r\n        startStep: 0,\r\n        totalSteps: 150\r\n    }).timeTrigger = 100;\r\n\r\n    const wavePage = new WaveDesignPage({\r\n        opacity: 0.02,\r\n        color: 'white',\r\n        width: 800,\r\n        height: 400\r\n    });\r\n\r\n    const wave = new WaveShape({\r\n        x: wavePage.width / 2,\r\n        y: wavePage.height / 2,\r\n        width: 800,\r\n        height: 400\r\n    });\r\n    wavePage.addWave(wave);\r\n\r\n    const walkerPage = new WalkerDesignPage({\r\n        opacity: 0.02,\r\n        color: 'white',\r\n        width: 1600,\r\n        height: 200\r\n    });\r\n\r\n    const groupSteps = SharedTimer.timeTrack.totalSteps;\r\n    const TimeLineGroupStamp = (groupId: number, rows: number = 2, props?: any) => {\r\n        return new TimeLinePage({\r\n            color: 'white',\r\n            stepWidth: sourceStep.width,\r\n            groupId: groupId,\r\n            width: groupSteps * sourceStep.width,\r\n            height: rows * sourceStep.height,\r\n            gridSizeX: sourceStep.width,\r\n            gridSizeY: sourceStep.height,\r\n            ...props\r\n        });\r\n\r\n    };\r\n\r\n    const Group1 = TimeLineGroupStamp(1);\r\n    const Group2 = TimeLineGroupStamp(2);\r\n    const Group3 = TimeLineGroupStamp(3);\r\n    const Group4 = TimeLineGroupStamp(4);\r\n    SharedTimer.addTimeLinePage(Group1)\r\n        .addTimeLinePage(Group2)\r\n        .addTimeLinePage(Group3)\r\n        .addTimeLinePage(Group4);\r\n\r\n    const EffectStamp = (name: string, size: number = 20, props?: any) => {\r\n        return new Effect({\r\n            myName: name,\r\n            total: size,\r\n            x: 0,\r\n            y: 0\r\n        }).horizontal(TimeStep, props);\r\n    };\r\n\r\n    const Effect0 = EffectStamp('E0', 10, { color: 'cyan' });\r\n\r\n    const Effect1 = EffectStamp('E1', 30, { color: 'orange' }).setStepOffset(10);\r\n    const Effect2 = EffectStamp('E2', 15, { color: 'green' }).followEffect(Effect1);\r\n    const Effect3 = EffectStamp('E3', 20, { color: 'yellow' }).followEffect(Effect1);\r\n    const Effect4 = EffectStamp('E4', 22, { color: 'red' }).followEffect(Effect1);\r\n\r\n    const Effect5 = EffectStamp('E5', 55, { color: 'blue' });\r\n    const target = 50;\r\n    Effect5.setStepOffset(target);\r\n\r\n    Group1.addEffect(Effect0);\r\n    // Group1.addEffect(Effect1);\r\n    // Group1.addEffect(Effect2);\r\n    // Group2.addEffect(Effect3);\r\n    // Group3.addEffect(Effect4);\r\n    // Group4.addEffect(Effect5);\r\n\r\n    const lightPage = new LightDesignPage({\r\n        opacity: 1.0,\r\n        color: 'white',\r\n        width: 35 * sourceLED.width,\r\n        height: 8 * sourceLED.height,\r\n        gridSizeX: sourceLED.width,\r\n        gridSizeY: sourceLED.height\r\n    });\r\n\r\n    const LEDStringStamp = (size: number = 20, row: number = 1, props?: any) => {\r\n        return new LightArray({\r\n            groupId: row,\r\n            total: size,\r\n            x: lightPage.width / 2,\r\n            y: sourceStep.height * row\r\n        }).horizontal(LEDLight, props);\r\n    };\r\n\r\n\r\n\r\n    const LEDString1 = LEDStringStamp(25, 1).setSource(Group1);\r\n    const LEDString2 = LEDStringStamp(25, 2);\r\n    const LEDString3 = LEDStringStamp(25, 3);\r\n    const LEDString4 = LEDStringStamp(25, 4);\r\n    const LEDString5 = LEDStringStamp(25, 5);\r\n    const LEDString6 = LEDStringStamp(25, 6);\r\n\r\n    lightPage.addLightArray(LEDString1);\r\n    lightPage.addLightArray(LEDString2);\r\n    lightPage.addLightArray(LEDString3);\r\n    lightPage.addLightArray(LEDString4);\r\n    lightPage.addLightArray(LEDString5);\r\n    lightPage.addLightArray(LEDString6);\r\n\r\n    const lightCanvasParams = {\r\n        width: lightPage.width,\r\n        height: lightPage.height,\r\n        title: 'Light Canvas',\r\n        draw: (ctx: CanvasRenderingContext2D) => {\r\n            lightPage.isDirty && lightPage.render(ctx);\r\n        }\r\n    };\r\n\r\n    const program = SharedTimer.compileTimeline();\r\n    SharedTimer.start();\r\n\r\n    return (\r\n        <div>\r\n            <Canvas {...lightCanvasParams} />\r\n            <ClockFace />\r\n            <Canvas {...Group1.canvasParams()} />\r\n            <Canvas {...Group2.canvasParams()} />\r\n            <Canvas {...Group3.canvasParams()} />\r\n            <Canvas {...Group4.canvasParams()} />\r\n            <ToJSON {...program} />\r\n        </div>\r\n    );\r\n};\r\n","C:\\workspace\\Foundry-Canvas-React\\src\\core\\foRenderer.tsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"115","replacedBy":"119"},{"ruleId":"117","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":3,"column":19,"nodeType":"123","messageId":"124","endLine":3,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":291,"column":5,"nodeType":"127","messageId":"128","endLine":293,"endColumn":6},{"ruleId":"115","replacedBy":"129"},{"ruleId":"117","replacedBy":"130"},{"ruleId":"121","severity":1,"message":"131","line":45,"column":11,"nodeType":"123","messageId":"124","endLine":45,"endColumn":21},{"ruleId":"121","severity":1,"message":"132","line":88,"column":11,"nodeType":"123","messageId":"124","endLine":88,"endColumn":18},{"ruleId":"121","severity":1,"message":"133","line":89,"column":11,"nodeType":"123","messageId":"124","endLine":89,"endColumn":18},{"ruleId":"121","severity":1,"message":"134","line":90,"column":11,"nodeType":"123","messageId":"124","endLine":90,"endColumn":18},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],"@typescript-eslint/no-unused-vars","'Matrix3' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["135"],["136"],"'walkerPage' is assigned a value but never used.","'Effect2' is assigned a value but never used.","'Effect3' is assigned a value but never used.","'Effect4' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]